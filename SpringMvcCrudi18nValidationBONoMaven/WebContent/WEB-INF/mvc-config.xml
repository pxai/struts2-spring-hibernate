<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

        <!-- We'll autodiscover beans and instantiate them -->
    <context:component-scan base-package="info.pello.mvc" />  
		

        <!-- With this all the content from resources dir will
        be treated as static content: js, css, images,  -->
        <mvc:resources mapping="/resources/**" location="/resources/" />

        <!-- We'll be using annotated controller classes -->
    <mvc:annotation-driven />

        <!-- We define the class to manage the views
        This ones just appends the name with the prefix and the suffix.
        For exaple, if the Controller returns "hello", the It resolves to
        prefix/hello/suffix, in this case: /WEB-INF/views/hello.jsp
        -->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix" value="/views/"/>
                <property name="suffix" value=".jsp"/>
        </bean>
        

</beans>