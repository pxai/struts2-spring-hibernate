<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/tx
        				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


 <tx:annotation-driven transaction-manager="transactionManager" />
 
<!-- We define a Bean for datasource -->
<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/erp" />
		<property name="username" value="root" />
		<property name="password" value="root" />
</bean>

<!--
We create Hibernate's SessionFactory bean
to get a Hibernate session in our program
If you pay attention you'll realize that this bean config
is somehow like the hibernate.cfg.xml configuration. We don't need
to create that file now.
-->
<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	<property name="mappingResources">
		<list>
			<value>Customer.hbm.xml</value>
		</list>		
	</property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.show_sql">true</prop>
			<prop key="dialect">org.hibernate.dialect.HSQLDialect</prop>
		</props>
	</property>
</bean>

<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
</bean>

<bean id="customerDao" class="info.pello.spring.persistence.hibernate.CustomerDAO" >
	<property name="sessionFactory" ref="sessionFactory" />
</bean>

<!-- We create the logger aspect -->
<bean id="logger" class="info.pello.spring.persistence.hibernate.Logger" />
<!-- 
We add AOP 
Don't forget to include in header:
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
-->

<!-- aop:config>
	<aop:aspect ref="logger">
		<aop:pointcut id="inserting"
			expression="execution(* info.pello.spring.persistence.hibernate.create(info.pello.spring.persistence.hibernate.Customer)) and args(customer)" /> 
		<aop:after pointcut-ref="inserting"
			method="reportInsert" 
			arg-names="customer" />
	</aop:aspect>
</aop:config -->



</beans>
